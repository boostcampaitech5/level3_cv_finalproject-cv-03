# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Project Testing

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read

jobs:
  build:
    # runs-on: ubuntu-18.04
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pip install poetry==1.5.1
      - name: Install mysqlclient using apt-get
        run: sudo apt-get install -y libmysqlclient-dev
      - name: Set up Python 3.10.12 & poetry
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.12"
          cache: poetry # caching poetry dependencies
          architecture: x64
        env:
          AGENT_TOOLSDIRECTORY: /home/kjy961226/actions-runner/_work/_temp
      - name: Install dependencies
        run: PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring poetry install
      - name: Run Black
        run: poetry run black . --check
      - name: Access to secrets
        run: |
          echo $GCP | base64 --decode > src/scratch/config/gcp.json
          echo $PUBLIC | base64 --decode > src/scratch/config/public.yaml
          echo $PRIVATE | base64 --decode > src/scratch/config/private.yaml
          echo $TRANSLATION | base64 --decode > src/scratch/config/translation.yaml
        env:
          GCP: ${{secrets.GCP}}
          PUBLIC: ${{secrets.PUBLIC}}
          PRIVATE: ${{secrets.PRIVATE}}
          TRANSLATION: ${{secrets.TRANSLATION}}
      - id: auth
        name: Authenticate to GCP
        uses: google-github-actions/auth@v0.3.1
        with:
            create_credentials_file: true
            workload_identity_provider: projects/3076028714/locations/global/workloadIdentityPools/github-action-ci
            service_account: 3076028714-compute@developer.gserviceaccount.com
      - id: gcloud
        name: gcloud
        run: gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
      - name: Run airflow
        run: |
          poetry run airflow db init
          poetry run airflow users create --username admin --password kjy961226 --firstname 'JunYoung' --lastname 'Kim' --role Admin --email 'kjy961226@naver.com'
        env:
          AIRFLOW_HOME: src/scratch
          TZ: UTC
      - name: Run pytest
        run: poetry run python -m pytest
      - name: Send slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Junyoung
          icon_emoji: ":octocat:"
          fields: repo, message, commit, author, action, eventName, ref, workflow, job, took
          if_mention: success, failure, cancelled
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
